name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: skavtech_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run check

    - name: Run unit tests
      run: npm run test:client
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/skavtech_test

    - name: Run server tests
      run: npm run test:server
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/skavtech_test

    - name: Build client
      run: npm run build:client

    - name: Build server
      run: npm run build:server

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, security-audit]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN || secrets.GITHUB_TOKEN }}

    - name: Build and push client image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}/skavtech-client:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push server image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}/skavtech-server:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # Example: kubectl apply -f k8s/staging/

  deploy-production:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: kubectl apply -f k8s/production/